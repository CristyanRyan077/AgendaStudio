// <auto-generated />
using System;
using AgendaApi.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaApi.Migrations
{
    [DbContext(typeof(AgendaContext))]
    [Migration("20251019002324_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendaApi.Domain.Models.AgendamentoEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.ToTable("AgendamentoEtapas");
                });

            modelBuilder.Entity("AgendaApi.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("CriancaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Entrega")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time");

                    b.Property<int?>("Mesversario")
                        .HasColumnType("int");

                    b.Property<int>("PacoteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tema")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PacoteId");

                    b.HasIndex("ServicoId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_Agendamentos_ClienteId");

                    b.HasIndex(new[] { "CriancaId" }, "IX_Agendamentos_CriancaId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AgendaApi.Models.AgendamentoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AgendamentoId" }, "IX_AgendamentoProdutos_AgendamentoId");

                    b.HasIndex(new[] { "ProdutoId" }, "IX_AgendamentoProdutos_ProdutoId");

                    b.ToTable("AgendamentoProdutos");
                });

            modelBuilder.Entity("AgendaApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalPagoHistorico")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPagoMesAtual")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AgendaApi.Models.Crianca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("IdadeUnidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_Criancas_ClienteId");

                    b.ToTable("Criancas");
                });

            modelBuilder.Entity("AgendaApi.Models.Pacote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK_Pacotes");

                    b.HasIndex("ServicoId");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("AgendaApi.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("AgendamentoProdutoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Metodo")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("AgendamentoProdutoId");

                    b.HasIndex("DataPagamento");

                    b.HasIndex(new[] { "AgendamentoId" }, "IX_Pagamentos_AgendamentoId");

                    b.HasIndex(new[] { "DataPagamento" }, "IX_Pagamentos_DataPagamento");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("AgendaApi.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("AgendaApi.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("PossuiCrianca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id")
                        .HasName("PK_Servicos");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AgendamentoPacote", b =>
                {
                    b.Property<int>("AgendamentosId")
                        .HasColumnType("int");

                    b.Property<int>("PacotesId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentosId", "PacotesId");

                    b.HasIndex("PacotesId");

                    b.ToTable("AgendamentoPacote");
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.Property<int>("AgendamentosId")
                        .HasColumnType("int");

                    b.Property<int>("ServicosId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentosId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("AgendaApi.Domain.Models.AgendamentoEtapa", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", "Agendamento")
                        .WithMany("Etapas")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AgendaApi.Models.Agendamento", b =>
                {
                    b.HasOne("AgendaApi.Models.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.Crianca", "Crianca")
                        .WithMany()
                        .HasForeignKey("CriancaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaApi.Models.Pacote", "Pacote")
                        .WithMany()
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Crianca");

                    b.Navigation("Pacote");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("AgendaApi.Models.AgendamentoProduto", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", "Agendamento")
                        .WithMany("AgendamentoProdutos")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.Produto", "Produto")
                        .WithMany("AgendamentoProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("AgendaApi.Models.Crianca", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", null)
                        .WithMany("Criancas")
                        .HasForeignKey("AgendamentoId");

                    b.HasOne("AgendaApi.Models.Cliente", "Cliente")
                        .WithMany("Criancas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AgendaApi.Models.Pacote", b =>
                {
                    b.HasOne("AgendaApi.Models.Servico", "Servico")
                        .WithMany("Pacotes")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Pacotes_Servicos");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("AgendaApi.Models.Pagamento", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", "Agendamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.AgendamentoProduto", "AgendamentoProduto")
                        .WithMany("Pagamentos")
                        .HasForeignKey("AgendamentoProdutoId");

                    b.Navigation("Agendamento");

                    b.Navigation("AgendamentoProduto");
                });

            modelBuilder.Entity("AgendamentoPacote", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.Pacote", null)
                        .WithMany()
                        .HasForeignKey("PacotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.HasOne("AgendaApi.Models.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaApi.Models.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgendaApi.Models.Agendamento", b =>
                {
                    b.Navigation("AgendamentoProdutos");

                    b.Navigation("Criancas");

                    b.Navigation("Etapas");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("AgendaApi.Models.AgendamentoProduto", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("AgendaApi.Models.Cliente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Criancas");
                });

            modelBuilder.Entity("AgendaApi.Models.Produto", b =>
                {
                    b.Navigation("AgendamentoProdutos");
                });

            modelBuilder.Entity("AgendaApi.Models.Servico", b =>
                {
                    b.Navigation("Pacotes");
                });
#pragma warning restore 612, 618
        }
    }
}
